# Default workflow for all repositories

name: gha-cicd

on:
  workflow_call:
  push:
    paths-ignore:
      - '.idea/**'
      - '.vscode/**'
    branches:
      - '**'
  schedule:
    - cron: 0 4 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    if: github.event_name == 'push'
    runs-on: [ self-hosted, buildjet-4vcpu-ubuntu-2204 ]
#    runs-on:
#      group: onlifeltd-runners
    permissions: write-all
#    needs: [ cancel-existing ]

    steps:
      - id: setup
        name: Setup runner
        run: |
          sudo apt-get update
          sudo apt-get install -y -q git git-lfs libwebp7 webp

      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
          lfs: true

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - id: auth-gcp
        name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          access_token_lifetime: 3600s
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER_GH_RUNNER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_GH_RUNNER }}

      - name: Build with Maven
        run: |
          if [ -d ./src/main/resources ]; then
            echo "${{ secrets.AXONIQ_LICENSE }}" > ./src/main/resources/axoniq.license
          fi
          echo "${{ vars.MAVEN_SETTINGS_AR }}" > settings.xml
          mvn --settings settings.xml \
              --no-transfer-progress \
              clean verify

  publish:
    name: "Publish Artifacts"
    if: github.event_name == 'pull_request'
    runs-on: [ self-hosted, buildjet-2vcpu-ubuntu-2204 ]
    #runs-on:
    #  group: onlifeltd-runners
    permissions: write-all
    needs: [ build ]

    steps:
      - id: setup
        name: Setup runner
        run: |
          sudo apt-get update
          sudo apt-get install -y -q git git-lfs libwebp7 webp

      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
          lfs: true

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2

      - id: auth-gcp
        name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          access_token_lifetime: 3600s
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER_GH_RUNNER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_GH_RUNNER }}

      - name: Set Build version to latest
        if: github.ref == 'refs/heads/main'
        run: |
          echo "build_version=latest" >> "$GITHUB_ENV"

      - name: Set Build version to branch-latest
        if: github.ref != 'refs/heads/main'
        run: |
          build_version="${{ github.ref_name }}-latest" &&
          echo "build_version=$build_version" >> "$GITHUB_ENV"

      - id: auth-gcr
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: 'gcr.io'
          username: '_json_key'
          password: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Publish
        if: github.event_name == 'push'
        run: |
          if [ -d ./src/main/resources ]; then
            echo "${{ secrets.AXONIQ_LICENSE }}" > ./src/main/resources/axoniq.license
          fi
          echo "${{ vars.MAVEN_SETTINGS_AR }}" > settings.xml
          mvn --settings settings.xml \
          -Dbuild.number="${{ github.run_number }}" \
          -Ddocker.custom.image.tag="${{ env.build_version }}" \
          -DdeployAtEnd=true \
          -Ddocker.custom.registry="${{ secrets.GCR_SITE }}" \
          -Ddocker.custom.registry.namespace="${{ secrets.GCR_NAMESPACE }}" \
          -Ddocker.skip.run=true \
          -DskipTests=true \
          -Ddocker.skip.run=true \
          --no-transfer-progress \
          -U -B clean deploy
